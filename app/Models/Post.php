<?php

namespace App\Models;

use App\Traits\RecordActivity;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;

class Post extends Model
{
    use HasFactory,RecordActivity;
    protected $guarded=[];
    protected $with=['channel','creator'];
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('replyCount',function (Builder $builder){
            return $builder->withCount('replies');
        });
        static::deleting(function ($post){
            $post->replies->each(function ($reply){
                $reply->delete();
            });
        });

    }


    public function ScopeFilter(Builder $query,$filters){
        return $filters->apply($query);
    }

    public function path(){
        return "posts/{$this->channel->slug}/{$this->id}";
    }
    public function addReply($reply){
         $this->replies()->create($reply);
    }
    public function replies(){
        return $this->hasMany(Reply::class);
    }
    public function creator(){
        return $this->belongsTo(User::class,'user_id');
    }
    public function channel(){
        return $this->belongsTo(Channel::class);
    }


}
