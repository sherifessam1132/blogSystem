<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];
    public function getRouteKeyName()
    {
        return 'name'; // TODO: Change the autogenerated stub
    }
    public function posts(){
        return $this->hasMany(Post::class,'user_id')->latest();
    }
    public function activity(){
        return $this->hasMany(Activity::class,'user_id');
    }
    public function read($post)
    {
        $key= $this->visitedPostCacheKey($post);
        cache()->forever($key,Carbon::now());
    }
    public function visitedPostCacheKey($post)
    {

        return sprintf('users.%s.visted.%s',$this->id,$post->id);

    }
}
